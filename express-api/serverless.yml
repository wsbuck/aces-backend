service: aces-backend

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  tableName: 'pitchers-table-${self:provider.stage}'
  serverless-offline:
    port: 5000
  dynamodb:
    start:
      migrate: true
      seed: true
    stages:
        - dev
    seed:
      domain:
        sources:
            - table: 'pitchers-table-${self:provider.stage}'
              sources: [./test_data.json]

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt":["PitchersDynamoDBTable", "Arn"] }
  environment:
    PITCHERS_TABLE: ${self:custom.tableName}

functions:
  app:
    handler: index.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
    
resources:
  Resources:
    PitchersDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: pitcherId
            AttributeType: S
        KeySchema:
          -
            AttributeName: pitcherId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}
